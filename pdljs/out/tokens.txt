<LET, let>
<TYP, string>
<VID, 1>
<SCL, ;>
<LET, let>
<TYP, int>
<VID, 2>
<SCL, ;>
<LET, let>
<TYP, boolean>
<VID, 3>
<SCL, ;>
<VID, 2>
<ASG, =>
<INT, 9>
<PLS, +>
<INT, 8>
<PLS, +>
<INT, 3>
<SCL, ;>
<FUN, function>
<VID, 4>
<TYP, int>
<PAO, (>
<TYP, int>
<VID, 1>
<COM, ,>
<TYP, boolean>
<VID, 1>
<PAC, )>
<BRO, {>
<LET, let>
<TYP, boolean>
<VID, 3>
<SCL, ;>
<LET, let>
<TYP, string>
<VID, 4>
<SCL, ;>
<VID, 3>
<ASG, =>
<VID, 2>
<GRT, >>
<INT, 0>
<SCL, ;>
<INP, input>
<PAO, (>
<VID, 4>
<PAC, )>
<SCL, ;>
<IFT, if>
<PAO, (>
<VID, 1>
<AND, &&>
<VID, 3>
<PAC, )>
<RET, return>
<INT, 0>
<SCL, ;>
<RET, return>
<VID, 2>
<MIN, ->
<VID, 4>
<PAO, (>
<VID, 2>
<MIN, ->
<INT, 1>
<COM, ,>
<VID, 3>
<PAC, )>
<SCL, ;>
<BRC, }>
<LET, let>
<TYP, string>
<VID, 5>
<SCL, ;>
<FUN, function>
<VID, 6>
<PAO, (>
<TYP, string>
<VID, 1>
<COM, ,>
<TYP, int>
<VID, 4>
<PAC, )>
<BRO, {>
<PRT, print>
<PAO, (>
<VID, 2>
<PAC, )>
<SCL, ;>
<PRT, print>
<PAO, (>
<STR, "hola">
<PAC, )>
<SCL, ;>
<PRT, print>
<PAO, (>
<VID, 2>
<PLS, +>
<INT, 3>
<PAC, )>
<SCL, ;>
<PRT, print>
<PAO, (>
<VID, 1>
<PAC, )>
<SCL, ;>
<INP, input>
<PAO, (>
<VID, 2>
<PAC, )>
<SCL, ;>
<PRT, print>
<PAO, (>
<INT, 4>
<PLS, +>
<VID, 2>
<PLS, +>
<INT, 32765>
<PLS, +>
<PAO, (>
<INT, 8>
<PLS, +>
<INT, 3>
<PAC, )>
<PAC, )>
<SCL, ;>
<BRC, }>
<VID, 5>
<ASG, =>
<STR, "++++Hellooooooooooooooooooooooooooooooooooooooooooooooooooooooo">
<SCL, ;>
<FUN, function>
<VID, 7>
<TYP, string>
<PAO, (>
<TYP, string>
<VID, 1>
<PAC, )>
<BRO, {>
<WHL, while>
<PAO, (>
<VID, 2>
<GRT, >>
<INT, 9>
<AND, &&>
<VID, 3>
<PAC, )>
<BRO, {>
<LET, let>
<TYP, int>
<VID, 2>
<SCL, ;>
<VID, 2>
<ASG, =>
<INT, 2>
<SCL, ;>
<IFT, if>
<PAO, (>
<VID, 3>
<PAC, )>
<RET, return>
<VID, 1>
<SCL, ;>
<BRC, }>
<RET, return>
<VID, 1>
<SCL, ;>
<BRC, }>
